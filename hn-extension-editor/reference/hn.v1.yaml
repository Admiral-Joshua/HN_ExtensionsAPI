openapi: 3.0.0
info:
  title: Extensions API
  version: '1.0'
  description: A set of RESTful API urls to be used for creation of and editing Hacknet Extensions.
  license:
    name: Copyright Â© 2020 Lunasphere Entertainment. All rights reserved.
  contact:
    name: Joshua Richardson-Noyes
    email: joshua.richardson-noyes@lunasphere.co.uk
    url: lunasphere.co.uk
servers:
  - url: 'https://hn.luansphere.co.uk/api'
    description: Production
  - url: 'http://localhost/api'
    description: Local Dev
tags:
  - name: Extension Info
    description: Information about an extension and how it should start-up.
  - name: CompNode Ops
    description: Information about computers created/registered to an extension.
  - name: Mission Ops
    description: Information about missions created/registered to an extension.
  - name: Files
    description: Models and Operations relating to in-game Computer Files
  - name: Email
    description: Models and Operations relating to in-game Emails sent to the player.
  - name: Attachments
    description: Models and Operations relating to attachments found at the bottom of emails.
  - name: Music
    description: Models and Operations relating to Music files included in a Hacknet extension.
  - name: Ports
    description: Models and Operations relating to the Port security of a Hacknet computer.
paths:
  /extensions/new:
    post:
      summary: Create Extension
      operationId: post-extension-new
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Extension_Info'
      description: Creates a new extension with the uploaded information.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Extension_Info'
            examples: {}
      tags:
        - Extension Info
      security:
        - JWT Generated Token: []
    parameters: []
  '/extensions/{id}':
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
    get:
      summary: Get Extension Info
      tags:
        - Extension Info
      responses:
        '200':
          description: Extension Info Data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Extension_Info'
        '404':
          description: Extension specified could not be found.
      operationId: get-extension-id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Extension_Info'
      description: "Fetches the extension info for extension with given ID. Returns it's data."
      security:
        - JWT Generated Token: []
    put:
      summary: Update Extension Info
      operationId: put-extension-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Extension_Info'
        '404':
          description: 'Extension ID not specified, or invalid.'
      description: Updates Extension at the specified ID with the uploaded information.
      security:
        - JWT Generated Token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Extension_Info'
      tags:
        - Extension Info
    delete:
      summary: Delete Extension
      operationId: delete-extension-id
      responses:
        '204':
          description: No Content
        '400':
          description: Extension ID not specified or invalid.
        '401':
          description: 'This is not your Extension, and thus you cannot delete it.'
      description: Deletes an extension and all associated data.
      security:
        - JWT Generated Token: []
      tags:
        - Extension Info
  /nodes/new:
    post:
      summary: Create new Computer
      operationId: post-nodes-new
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HN_CompNode'
      description: Creates new computer for the specified extension with the included information.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HN_CompNode'
        description: Information about the computer being created
      tags:
        - CompNode Ops
      security:
        - JWT Generated Token: []
        - ExtensionID: []
  '/nodes/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - CompNode Ops
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HN_CompNode'
              examples: {}
          headers: {}
        '404':
          description: Not Found
      operationId: get-nodes-id
      description: Returns information about the specified node under this extension.
      security:
        - JWT Generated Token: []
        - ExtensionID: []
    put:
      summary: Update Node Info
      operationId: put-nodes-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HN_CompNode'
      description: Updates the node at the given ID with the uploaded information.
      security:
        - JWT Generated Token: []
        - ExtensionID: []
      tags:
        - CompNode Ops
    delete:
      summary: Delete Node
      operationId: delete-nodes-id
      responses:
        '204':
          description: Success
        '400':
          description: Node ID not specified or invalid.
      description: Deletes the Node and all associated data matching the given ID.
      security:
        - JWT Generated Token: []
        - ExtensionID: []
      tags:
        - CompNode Ops
  /missions/new:
    post:
      summary: Create Mission
      operationId: post-missions-new
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HN_Mission'
        '500':
          description: Internal Server Error
      description: 'Creates a new mission with the specified information, under the current extension.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HN_Mission'
        description: ''
      tags:
        - Mission Ops
      security:
        - JWT Generated Token: []
        - ExtensionID: []
  '/missions/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get Mission Info
      tags:
        - Mission Ops
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HN_Mission'
        '400':
          description: Invalid or unspecified Mission ID.
        '404':
          description: Could not find mission with specified ID.
      operationId: get-missions-id
      description: Retrieves Mission information for mission with the given mission ID.
      security:
        - JWT Generated Token: []
        - ExtensionID: []
    put:
      summary: Update Mission Information
      operationId: put-missions-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HN_Mission'
        '400':
          description: Invalid or unspecified Mission ID.
      description: Updates a mission at the specified ID with the uploaded information.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HN_Mission'
        description: The updated Mission information.
      security:
        - JWT Generated Token: []
        - ExtensionID: []
      tags:
        - Mission Ops
    delete:
      summary: Delete Mission
      operationId: delete-missions-id
      responses:
        '204':
          description: No Content
        '400':
          description: Mission ID not specified or not valid.
      description: Deletes a mission and all associated data matching the given mission ID.
      security:
        - JWT Generated Token: []
        - ExtensionID: []
      tags:
        - Mission Ops
  /music/list:
    get:
      summary: Get Music Track List
      tags:
        - Music
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HN_Music'
      operationId: get-music-list
      description: Retrieves a list of music tracks uplaoded by the current user.
      security:
        - JWT Generated Token: []
  '/music/play/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Play Music Track
      tags:
        - Music
      responses:
        '200':
          description: OK
          content:
            application/ogg:
              schema: {}
        '404':
          description: Music Track could not be found.
      operationId: get-music-play-id
      description: Retrieves the actual audio file for audio matching the specified Music ID.
      security:
        - JWT Generated Token: []
  /music/new:
    post:
      summary: Upload new Track
      operationId: post-music-new
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HN_Music'
      description: Uploads a new track with the specified information and uploaded Audio (OGG) file.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                ownerId:
                  type: integer
                title:
                  type: string
        description: 'Information about the track, followed by the uploaded chunk data.'
      security:
        - JWT Generated Token: []
      tags:
        - Music
  '/music/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    put:
      summary: Update Track Info
      operationId: put-music-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HN_Music'
        '400':
          description: Track could not be found or you do not have permission to edit it.
      description: Updates information about the music track matching the given ID.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HN_Music'
      security:
        - JWT Generated Token: []
      tags:
        - Music
    delete:
      summary: Delete Music Track
      operationId: delete-music-id
      responses:
        '204':
          description: No Content
        '400':
          description: No TrackID specified to delete.
      description: Deletes a music track matching the specified ID.
      tags:
        - Music
  '/nodes/files/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Fetch File Information
      tags:
        - CompNode Ops
        - Files
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HN_CompFile'
        '400':
          description: File ID not specified or is invalid.
      operationId: get-nodes-files-id
      description: Gets information about a file matching the given ID.
      security:
        - JWT Generated Token: []
        - ExtensionID: []
    put:
      summary: Update File Information
      operationId: put-nodes-files-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HN_CompFile'
      parameters: []
      description: 'Updates an existing file at the specified ID, using file data.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HN_CompFile'
        description: The updated information about this file.
      security:
        - JWT Generated Token: []
        - ExtensionID: []
      tags:
        - CompNode Ops
        - Files
    delete:
      summary: Delete Computer File
      operationId: delete-nodes-files-id
      responses:
        '204':
          description: No Content
        '400':
          description: 'No File ID specified, or invalid.'
      description: 'Deletes the file matching the specified ID, and all associated data.'
      security:
        - JWT Generated Token: []
        - ExtensionID: []
      tags:
        - CompNode Ops
        - Files
  '/nodes/ports/list/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get Computer Ports
      tags:
        - CompNode Ops
        - Ports
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HN_PortSummary'
        '400':
          description: 'Node ID not specified, or was invalid.'
      operationId: get-nodes-ports-list-id
      description: Retrieves a list of ports that have been mapped to the computer with specified ID.
      security:
        - JWT Generated Token: []
        - ExtensionID: []
  /missions/email/new:
    post:
      summary: Create new Email
      operationId: post-missions-email-new
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HN_Email'
        '500':
          description: Internal Server Error
      description: Creates a new email with submitted information.
      security:
        - JWT Generated Token: []
        - ExtensionID: []
      tags:
        - Mission Ops
  '/missions/email/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Fetch Email Info
      tags:
        - Mission Ops
        - Email
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HN_Email'
      operationId: get-missions-email-id
      security:
        - JWT Generated Token: []
        - ExtensionID: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HN_Email'
      description: Retrieves the information about the email matching the ID specified.
    put:
      summary: Update Email Info
      operationId: put-missions-email-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HN_Email'
        '400':
          description: 'Email ID not specified, or is invalid.'
      description: Updates the email matching the specified ID with provided information.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HN_Email'
        description: Updated Email information
      security:
        - JWT Generated Token: []
        - ExtensionID: []
      tags:
        - Mission Ops
        - Email
    delete:
      summary: Delete An Email
      operationId: delete-missions-email-id
      responses:
        '204':
          description: No Content
        '400':
          description: 'Email ID not specified, or is invalid.'
      description: Deletes email matching the specified ID.
      tags:
        - Mission Ops
        - Email
  /missions/email/attachment/new:
    post:
      summary: Create new Email Attachment
      operationId: post-missions-email-attachment-new
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HN_EmailAttachment'
        '500':
          description: Internal Server Error
      description: Creates a brand new Email Attachment using the provided information.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HN_EmailAttachment'
      security:
        - JWT Generated Token: []
        - ExtensionID: []
      tags:
        - Mission Ops
        - Email
        - Attachments
  '/missions/email/attachment/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get Email Attachment
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HN_EmailAttachment'
      operationId: get-missions-email-attachment-id
      description: Retrieves information about the email attachment matching the specified ID.
      security:
        - JWT Generated Token: []
        - ExtensionID: []
      tags:
        - Mission Ops
        - Email
        - Attachments
    put:
      summary: Update Email Attachment
      operationId: put-missions-email-attachment-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HN_EmailAttachment'
      description: 'Updates an existing Email Attachment with the provided information, matching the specified ID.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HN_EmailAttachment'
      security:
        - JWT Generated Token: []
        - ExtensionID: []
      tags:
        - Mission Ops
        - Email
        - Attachments
    delete:
      summary: Delete Email Attachment
      operationId: delete-missions-email-attachment-id
      responses:
        '204':
          description: No Content
      description: Deletes an email attachment matching the specified ID.
      parameters: []
      security:
        - JWT Generated Token: []
        - ExtensionID: []
      tags:
        - Mission Ops
        - Email
        - Attachments
  /missions/email/attachment/map:
    get:
      summary: Map Attachment to Email
      tags:
        - Mission Ops
        - Email
        - Attachments
      responses:
        '204':
          description: No Content
        '400':
          description: (Email or Attachment) ID not specified or is invalid.
      operationId: map-missions-email-attachment
      description: Creates a link between an attachment and an email.
      security:
        - JWT Generated Token: []
        - ExtensionID: []
      parameters:
        - schema:
            type: integer
            minimum: 1
          in: query
          name: email
          description: Email ID the attachment is linked to
          required: true
        - schema:
            type: integer
            minimum: 1
          in: query
          name: attachment
          description: Attachment ID this link is to
          required: true
  /missions/email/attachment/unmap:
    get:
      summary: Unmap Attachment from Email
      tags:
        - Mission Ops
        - Email
        - Attachments
      responses:
        '204':
          description: No Content
        '400':
          description: (Email or Attachment) ID not specified or is invalid.
      operationId: unmap-missions-email-attachment
      description: Removes a link between an attachment and an email.
      security:
        - JWT Generated Token: []
        - ExtensionID: []
      parameters:
        - schema:
            type: integer
            minimum: 1
          in: query
          name: email
          description: Email ID the attachment is linked to
          required: true
        - schema:
            type: integer
            minimum: 1
          in: query
          name: attachment
          description: Attachment ID this link is to
          required: true
components:
  schemas:
    Extension_Info:
      title: Extension_Info
      type: object
      x-tags:
        - Extension Info
      description: ''
      properties:
        id:
          type: integer
        name:
          type: string
        allow_saves:
          type: boolean
        startingNodes:
          type: array
          items:
            type: number
        startingMissionId:
          type: number
        starting_actions:
          type: string
        description:
          type: string
        factions:
          type: array
          items: {}
        theme:
          type: string
        startingMusic:
          type: number
        workshop_description:
          type: string
        workshop_language:
          type: string
        workshop_visibility:
          type: integer
        language:
          type: integer
        workshop_tags:
          type: string
        workshop_img:
          type: string
        workshop_id:
          type: string
      required:
        - name
        - language
    HN_CompNode:
      title: HN_CompNode
      type: object
      description: Information about a computer inside of a hacknet extension
      properties:
        id:
          type: string
        name:
          type: string
        ip:
          type: string
        securityLevel:
          type: integer
        allowsDefaultBootModule:
          type: boolean
        icon:
          type: string
        typeId:
          type: integer
        adminPass:
          type: string
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/ComputerAccount'
        ports:
          type: array
          items:
            $ref: '#/components/schemas/HN_Port'
        portsForCrack:
          type: integer
        traceTime:
          type: number
        admin:
          $ref: '#/components/schemas/ComputerAdminInfo'
        tracker:
          type: boolean
        files:
          type: array
          items:
            $ref: '#/components/schemas/HN_CompFile'
        nodeId:
          type: number
      required:
        - id
        - name
        - ip
        - securityLevel
        - icon
    ComputerAccount:
      title: ComputerAccount
      type: object
      properties:
        name:
          type: string
        password:
          type: string
        type:
          type: integer
    ComputerAdminInfo:
      title: ComputerAdminInfo
      type: object
      properties:
        type:
          type: string
        resetPassword:
          type: boolean
        isSuper:
          type: boolean
    HN_PortRemap:
      title: HN_PortRemap
      type: object
      properties:
        portId:
          type: number
        port:
          type: integer
        nodeId:
          type: integer
    HN_CompFile:
      title: HN_CompFile
      type: object
      description: A single file intended to be placed onto a computer.
      properties:
        fileId:
          type: number
        path:
          type: string
        name:
          type: string
        contents:
          type: string
    HN_Mission:
      title: HN_Mission
      type: object
      x-tags:
        - Mission Data
      description: A mission for the player to complete.
      properties:
        id:
          type: string
        activeCheck:
          type: boolean
        shouldIgnoreSenderVerification:
          type: boolean
        goals:
          type: array
          items:
            $ref: '#/components/schemas/HN_MissionGoal'
        missionStart:
          type: string
        missionEnd:
          type: string
        nextMission:
          $ref: '#/components/schemas/HN_Mission'
        IsSilent:
          type: boolean
        branchMissions:
          type: array
          items:
            $ref: '#/components/schemas/HN_Mission'
        email:
          $ref: '#/components/schemas/HN_Email'
        posting:
          $ref: '#/components/schemas/HN_MissionPost'
    HN_MissionGoal:
      title: HN_MissionGoal
      type: object
      properties:
        type:
          type: integer
        target:
          type: string
        file:
          type: string
        path:
          type: string
        keyword:
          type: string
        removal:
          type: boolean
        caseSensitive:
          type: boolean
        owner:
          type: string
        degree:
          type: string
        uni:
          type: string
        gpa:
          type: string
        mailServer:
          type: string
        recipient:
          type: string
        subject:
          type: string
      required:
        - type
      x-tags:
        - Mission Data
      description: A goal for a player to complete as part of a mission.
    HN_Email:
      title: HN_Email
      type: object
      description: An email to be sent to the player in-game.
      properties:
        emailId:
          type: integer
        sender:
          type: string
        subjec:
          type: string
        body:
          type: string
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/HN_EmailAttachment'
    HN_EmailAttachment:
      title: HN_EmailAttachment
      type: object
      properties:
        type:
          type: integer
        title:
          type: string
        content:
          type: string
        comp:
          type: string
        user:
          type: string
        pass:
          type: string
    HN_MissionPost:
      title: HN_MissionPost
      type: object
      description: A posting in a mission board.
      properties:
        title:
          type: string
        reqs:
          type: string
        requiredRank:
          type: integer
        content:
          type: string
      x-tags:
        - Mission Data
    HN_Port:
      title: HN_Port
      type: object
      properties:
        portId:
          type: number
        port:
          type: number
        portType:
          type: string
    HN_PortSummary:
      title: HN_PortSummary
      type: object
      description: 'A summary of ports, and port remaps that have been assigned a particular computer.'
      properties:
        ports:
          type: array
          items:
            $ref: '#/components/schemas/HN_Port'
        remaps:
          type: array
          items:
            $ref: '#/components/schemas/HN_PortRemap'
    HN_Music:
      title: HN_Music
      type: object
      description: A music track uploaded for a Hacknet Extension.
      properties:
        musicId:
          type: integer
        ownerId:
          type: integer
        title:
          type: string
  securitySchemes:
    JWT Generated Token:
      type: http
      scheme: bearer
      description: ''
    ExtensionID:
      name: extId
      type: apiKey
      in: cookie
